// Generated by view binder compiler. Do not edit!
package com.example.aidflow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aidflow.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HistoryRecycleviewBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView amountHistory;

  @NonNull
  public final TextView donationDateHistory;

  @NonNull
  public final TextView donationNameHistory;

  @NonNull
  public final TextView donatorNameHistory;

  @NonNull
  public final TextView paymentMethodHistory;

  @NonNull
  public final TextView projectNameHistory;

  @NonNull
  public final View urgencyIndicator;

  private HistoryRecycleviewBinding(@NonNull CardView rootView, @NonNull TextView amountHistory,
      @NonNull TextView donationDateHistory, @NonNull TextView donationNameHistory,
      @NonNull TextView donatorNameHistory, @NonNull TextView paymentMethodHistory,
      @NonNull TextView projectNameHistory, @NonNull View urgencyIndicator) {
    this.rootView = rootView;
    this.amountHistory = amountHistory;
    this.donationDateHistory = donationDateHistory;
    this.donationNameHistory = donationNameHistory;
    this.donatorNameHistory = donatorNameHistory;
    this.paymentMethodHistory = paymentMethodHistory;
    this.projectNameHistory = projectNameHistory;
    this.urgencyIndicator = urgencyIndicator;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static HistoryRecycleviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HistoryRecycleviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.history_recycleview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HistoryRecycleviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amount_history;
      TextView amountHistory = ViewBindings.findChildViewById(rootView, id);
      if (amountHistory == null) {
        break missingId;
      }

      id = R.id.donationDate_history;
      TextView donationDateHistory = ViewBindings.findChildViewById(rootView, id);
      if (donationDateHistory == null) {
        break missingId;
      }

      id = R.id.donationName_history;
      TextView donationNameHistory = ViewBindings.findChildViewById(rootView, id);
      if (donationNameHistory == null) {
        break missingId;
      }

      id = R.id.donatorName_history;
      TextView donatorNameHistory = ViewBindings.findChildViewById(rootView, id);
      if (donatorNameHistory == null) {
        break missingId;
      }

      id = R.id.paymentMethod_history;
      TextView paymentMethodHistory = ViewBindings.findChildViewById(rootView, id);
      if (paymentMethodHistory == null) {
        break missingId;
      }

      id = R.id.projectName_history;
      TextView projectNameHistory = ViewBindings.findChildViewById(rootView, id);
      if (projectNameHistory == null) {
        break missingId;
      }

      id = R.id.urgencyIndicator;
      View urgencyIndicator = ViewBindings.findChildViewById(rootView, id);
      if (urgencyIndicator == null) {
        break missingId;
      }

      return new HistoryRecycleviewBinding((CardView) rootView, amountHistory, donationDateHistory,
          donationNameHistory, donatorNameHistory, paymentMethodHistory, projectNameHistory,
          urgencyIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
