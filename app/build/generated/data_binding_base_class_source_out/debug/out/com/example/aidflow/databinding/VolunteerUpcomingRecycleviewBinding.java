// Generated by view binder compiler. Do not edit!
package com.example.aidflow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aidflow.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VolunteerUpcomingRecycleviewBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView addressUpcoming;

  @NonNull
  public final TextView contactnumUpcoming;

  @NonNull
  public final TextView dueDateUpcoming;

  @NonNull
  public final TextView organizerUpcoming;

  @NonNull
  public final CardView upcomingCardView;

  @NonNull
  public final TextView volunteerNameUpcoming;

  private VolunteerUpcomingRecycleviewBinding(@NonNull CardView rootView,
      @NonNull TextView addressUpcoming, @NonNull TextView contactnumUpcoming,
      @NonNull TextView dueDateUpcoming, @NonNull TextView organizerUpcoming,
      @NonNull CardView upcomingCardView, @NonNull TextView volunteerNameUpcoming) {
    this.rootView = rootView;
    this.addressUpcoming = addressUpcoming;
    this.contactnumUpcoming = contactnumUpcoming;
    this.dueDateUpcoming = dueDateUpcoming;
    this.organizerUpcoming = organizerUpcoming;
    this.upcomingCardView = upcomingCardView;
    this.volunteerNameUpcoming = volunteerNameUpcoming;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static VolunteerUpcomingRecycleviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VolunteerUpcomingRecycleviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.volunteer_upcoming_recycleview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VolunteerUpcomingRecycleviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address_upcoming;
      TextView addressUpcoming = ViewBindings.findChildViewById(rootView, id);
      if (addressUpcoming == null) {
        break missingId;
      }

      id = R.id.contactnum_upcoming;
      TextView contactnumUpcoming = ViewBindings.findChildViewById(rootView, id);
      if (contactnumUpcoming == null) {
        break missingId;
      }

      id = R.id.dueDate_upcoming;
      TextView dueDateUpcoming = ViewBindings.findChildViewById(rootView, id);
      if (dueDateUpcoming == null) {
        break missingId;
      }

      id = R.id.organizer_upcoming;
      TextView organizerUpcoming = ViewBindings.findChildViewById(rootView, id);
      if (organizerUpcoming == null) {
        break missingId;
      }

      CardView upcomingCardView = (CardView) rootView;

      id = R.id.volunteerName_upcoming;
      TextView volunteerNameUpcoming = ViewBindings.findChildViewById(rootView, id);
      if (volunteerNameUpcoming == null) {
        break missingId;
      }

      return new VolunteerUpcomingRecycleviewBinding((CardView) rootView, addressUpcoming,
          contactnumUpcoming, dueDateUpcoming, organizerUpcoming, upcomingCardView,
          volunteerNameUpcoming);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
