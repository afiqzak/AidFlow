// Generated by view binder compiler. Do not edit!
package com.example.aidflow.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aidflow.R;
import com.mikhaellopez.circularprogressbar.CircularProgressBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentVolunteerBadgesBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView badge12hours;

  @NonNull
  public final ImageView badge1day;

  @NonNull
  public final ImageView badge1month;

  @NonNull
  public final ImageView badge1week;

  @NonNull
  public final ImageView badge7hours;

  @NonNull
  public final ImageView badgeImage;

  @NonNull
  public final CircularProgressBar circularProgressBar;

  @NonNull
  public final TextView progressTextDenominator;

  @NonNull
  public final TextView progressTextNumerator;

  private FragmentVolunteerBadgesBinding(@NonNull ScrollView rootView,
      @NonNull ImageView badge12hours, @NonNull ImageView badge1day, @NonNull ImageView badge1month,
      @NonNull ImageView badge1week, @NonNull ImageView badge7hours, @NonNull ImageView badgeImage,
      @NonNull CircularProgressBar circularProgressBar, @NonNull TextView progressTextDenominator,
      @NonNull TextView progressTextNumerator) {
    this.rootView = rootView;
    this.badge12hours = badge12hours;
    this.badge1day = badge1day;
    this.badge1month = badge1month;
    this.badge1week = badge1week;
    this.badge7hours = badge7hours;
    this.badgeImage = badgeImage;
    this.circularProgressBar = circularProgressBar;
    this.progressTextDenominator = progressTextDenominator;
    this.progressTextNumerator = progressTextNumerator;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentVolunteerBadgesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVolunteerBadgesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_volunteer_badges, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVolunteerBadgesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.badge_12hours;
      ImageView badge12hours = ViewBindings.findChildViewById(rootView, id);
      if (badge12hours == null) {
        break missingId;
      }

      id = R.id.badge_1day;
      ImageView badge1day = ViewBindings.findChildViewById(rootView, id);
      if (badge1day == null) {
        break missingId;
      }

      id = R.id.badge_1month;
      ImageView badge1month = ViewBindings.findChildViewById(rootView, id);
      if (badge1month == null) {
        break missingId;
      }

      id = R.id.badge_1week;
      ImageView badge1week = ViewBindings.findChildViewById(rootView, id);
      if (badge1week == null) {
        break missingId;
      }

      id = R.id.badge_7hours;
      ImageView badge7hours = ViewBindings.findChildViewById(rootView, id);
      if (badge7hours == null) {
        break missingId;
      }

      id = R.id.badgeImage;
      ImageView badgeImage = ViewBindings.findChildViewById(rootView, id);
      if (badgeImage == null) {
        break missingId;
      }

      id = R.id.circularProgressBar;
      CircularProgressBar circularProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (circularProgressBar == null) {
        break missingId;
      }

      id = R.id.progressText_denominator;
      TextView progressTextDenominator = ViewBindings.findChildViewById(rootView, id);
      if (progressTextDenominator == null) {
        break missingId;
      }

      id = R.id.progressText_numerator;
      TextView progressTextNumerator = ViewBindings.findChildViewById(rootView, id);
      if (progressTextNumerator == null) {
        break missingId;
      }

      return new FragmentVolunteerBadgesBinding((ScrollView) rootView, badge12hours, badge1day,
          badge1month, badge1week, badge7hours, badgeImage, circularProgressBar,
          progressTextDenominator, progressTextNumerator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
